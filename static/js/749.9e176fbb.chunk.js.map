{"version":3,"file":"static/js/749.9e176fbb.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"layoutScroll\",\n    \"layoutRoot\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","buildTransform","transformIsDefault","transformTemplate","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformString","sort","o","allowArrayLike","it","iterator","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","trim","isCSSVariable","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionConfig"],"sourceRoot":""}